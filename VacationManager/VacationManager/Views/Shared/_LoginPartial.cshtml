@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using VacationManager.Data
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject ApplicationDbContext DbContext;

@{
    // Get the current user's username
    string username = User.Identity?.Name;

    // Fetch the user from the database based on the username
    var user = await DbContext.Users.FirstOrDefaultAsync(u => u.Username == username);
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            @if(user != null)
            {
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><b>Hello @user.FirstName @user.LastName!</b></a>
            }
            else {<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><b>Hello @User.Identity?.Name!</b></a>}
            
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark"><b>Logout</b></button>
            </form>
        </li>
        @* @if (user != null && user.RoleId == 1)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
        }
        else  *@
        @if (username == "dummyCEO")
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register"><b>Register</b></a>
            </li>
        }
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login"><b>Login</b></a>
        </li>
    }
</ul>