@model VacationManager.Models.LeaveRequest

@{
    ViewData["Title"] = "Edit";
}

<head>
    <link rel="stylesheet" href="~/css/TeamEdit.css" />
</head>

<div class="container">
    <div class="form-container">
        <h1 align="center">EDIT</h1>
        <h1 align="center">LEAVE REQUEST</h1>
        @if (Model.IsHalfDay)
        {
            <div class="alert alert-info" role="alert">You are editing a request for half-day leave</div>
        }
        <hr />
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group" style="display: none;">
                <label asp-for="RequestCreationDate" class="control-label"></label>
                <input asp-for="RequestCreationDate" class="form-control" />
                <span asp-validation-for="RequestCreationDate" class="text-danger"></span>
            </div>
            <div class="form-group" style="display: none;">
                <label asp-for="ApplicantId" class="control-label"></label>
                <input asp-for="ApplicantId" class="form-control" />
                <span asp-validation-for="ApplicantId" class="text-danger"></span>
            </div>
            <div class="form-group form-check" style="display: none;">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsSickLeave" /> @Html.DisplayNameFor(model => model.IsSickLeave)
                </label>
            </div>
            <div class="form-group" style="display: none;">
                <label asp-for="MedicalCertificate" class="control-label"></label>
                <input asp-for="MedicalCertificate" class="form-control" />
                <span asp-validation-for="MedicalCertificate" class="text-danger"></span>
            </div>
            <div class="form-group form-check" style="display: none;">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsPaid" /> @Html.DisplayNameFor(model => model.IsPaid)
                </label>
            </div>
            <div class="form-group form-check" style="display: none;">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsHalfDay" /> @Html.DisplayNameFor(model => model.IsHalfDay)
                </label>
            </div>
            <div class="form-group form-check" style="display: none;">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsApproved" /> @Html.DisplayNameFor(model => model.IsApproved)
                </label>
            </div>
            <div class="form-group form-check" style="display: none;">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsCompleted" /> @Html.DisplayNameFor(model => model.IsCompleted)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="StartDate" class="control-label">Start Date</label>
                <input asp-for="StartDate" class="form-control" type="date" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDate" class="control-label">End Date</label>
                <input asp-for="EndDate" class="form-control" type="date" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ApproverId" class="control-label">Approver</label>
                <select asp-for="ApproverId" class="form-control" asp-items="@(new SelectList(ViewBag.Approvers, "Value", "Text"))">
                </select>
                <span asp-validation-for="ApproverId" class="text-danger"></span>
            </div>
            <div class="form-footer">
                <div>
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
                <div>
                    <a asp-action="Index"><i class="fa fa-chevron-circle-left" aria-hidden="true"></i> Back to List</a>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        var startDateField = document.getElementById("StartDate");
        var endDateField = document.getElementById("EndDate");
        var halfDayCheckbox = document.getElementById("IsHalfDay");

        // Funct. for min attribute of date fields
        function setMinDate() {
            var today = new Date();
            today.setDate(today.getDate() + 1); // Set minimum date to tomorrow
            startDateField.min = today.toISOString().split('T')[0];
            endDateField.min = today.toISOString().split('T')[0];
        }

        // Func. to handle changes in start date and half day checkbox
        function handleStartDateChange() {
            if (halfDayCheckbox.checked) {
                endDateField.value = startDateField.value;
            }
            validateEndDate();
        }

        function handleEndDateChange() {
            if (halfDayCheckbox.checked) {
                startDateField.value = endDateField.value;
            }
            validateEndDate();
        }

        // Validate end date
        function validateEndDate() {
            if (new Date(endDateField.value) < new Date(startDateField.value)) {
                endDateField.value = startDateField.value;
            }
        }

        // Event listeners
        startDateField.addEventListener("change", handleStartDateChange);
        endDateField.addEventListener("change", handleEndDateChange);
        halfDayCheckbox.addEventListener("change", handleStartDateChange);

        // Initial state
        setMinDate();
    </script>
}
