@inject VacationManager.Data.ApplicationDbContext _context
@model IEnumerable<VacationManager.Models.LeaveRequest>

@{
    ViewData["Title"] = "Index";
    var username = User.Identity.Name;
    var user = _context.Users.SingleOrDefault(u => u.Username == username);
    var today = DateTime.Today;
    var usersOnVacation = _context.LeaveRequests
        .Where(lr => lr.IsApproved && today >= lr.StartDate && today <= lr.EndDate)
        .Select(lr => lr.ApplicantId)
        .ToList();
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.RequestCreationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ApplicantId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsSickLeave)
            </th>
            @* <th>
            @Html.DisplayNameFor(model => model.MedicalCertificate)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.IsPaid)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.IsHalfDay)
            </th> *@
            <th>
                @Html.DisplayNameFor(model => model.IsApproved)
            </th>
            @* <th>
            @Html.DisplayNameFor(model => model.ApproverId)
            </th> *@
            <th>
                @Html.DisplayNameFor(model => model.IsCompleted)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.RequestCreationDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ApplicantId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsSickLeave)
            </td>
           @*  <td>
                @Html.DisplayFor(modelItem => item.MedicalCertificate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsPaid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsHalfDay)
            </td> *@
            <td>
                @Html.DisplayFor(modelItem => item.IsApproved)
            </td>
            @* <td>
                @Html.DisplayFor(modelItem => item.ApproverId)
            </td> *@
            <td>
                @Html.DisplayFor(modelItem => item.IsCompleted)
            </td>
            <td>
                    @if (!item.IsApproved && !item.IsCompleted)
                    {
                        var approverbyRole = _context.Users.FirstOrDefault(u => u.Id == item.ApproverId);
                        if (item.ApproverId != null && !usersOnVacation.Contains((int)item.ApproverId))
                        {
                            if (approverbyRole.RoleId == 3 && (user.RoleId == 1 || item.ApproverId == user.Id))
                            {
                                <form asp-action="ApproveRequest" asp-route-id="@item.Id" method="post">
                                    <button type="submit">Approve</button>
                                </form>

                                <form asp-action="RejectRequest" asp-route-id="@item.Id" method="post">
                                    <button type="submit">Reject</button>
                                </form>
                            }
                            else if (approverbyRole.RoleId == 1 && item.ApproverId == user.Id)
                            {
                                <form asp-action="ApproveRequest" asp-route-id="@item.Id" method="post">
                                    <button type="submit">Approve</button>
                                </form>

                                <form asp-action="RejectRequest" asp-route-id="@item.Id" method="post">
                                    <button type="submit">Reject</button>
                                </form>
                            }
                        }
                        if (item.ApproverId != null && usersOnVacation.Contains((int)item.ApproverId) && user.RoleId == 1)
                        {
                            <form asp-action="ApproveRequest" asp-route-id="@item.Id" method="post">
                                <button type="submit">Approve</button>
                            </form>

                            <form asp-action="RejectRequest" asp-route-id="@item.Id" method="post">
                                <button type="submit">Reject</button>
                            </form>
                        }
                    }
                    @if (item.ApplicantId == user.Id && !item.IsCompleted)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit|</a> 
                        <a asp-action="Details" asp-route-id="@item.Id">Details|</a> 
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
            </td>
        </tr>
}
    </tbody>
</table>
