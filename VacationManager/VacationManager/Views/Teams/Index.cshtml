@using VacationManager.Data
@inject VacationManager.Data.ApplicationDbContext _context
@model IEnumerable<VacationManager.Models.TeamModel>

@{
    ViewData["Title"] = "Index";
    var username = User.Identity.Name;
    var user = _context.Users.SingleOrDefault(u => u.Username == username);
    if(user.RoleId != 1 && user.RoleId != 3)
    {
         <script>
                window.location.href = "/Home/Index";
        </script>
    }
}

<head>
    <link rel="stylesheet" href="~/css/TeamIndex.css" />
 </head>

<h1 align ="center">TEAMS</h1>

@if(user.RoleId == 1){
    <p>
        <a asp-action="Create" class="btn btn-primary"><i class="fa fa-plus-circle"></i> Create New</a>
    </p>
}

<form id="filterForm">
    <div class="form-group d-flex">
        <div class="mr-3">
            <label for="teamNameFilter">Filter by Team Name:</label>
            <input type="text" class="form-control" id="teamNameFilter">
        </div>
        <div class="mr-3">
            <label for="projectNameFilter">Filter by Project Name:</label>
            <input type="text" class="form-control" id="projectNameFilter">
        </div>
        <button type="button" class="btn btn-primary mr-2 align-self-end" onclick="applyFilter()"><i class="fa fa-filter icon"></i> Apply Filter</button>
        <button type="button" class="btn btn-secondary align-self-end" onclick="clearFilter()"><i class="fa fa-times icon"></i> Clear Filter</button>
    </div>
</form>

<label for="pageSizeSelector">Number of rows:</label>
<select id="pageSizeSelector">
    <option value="10">10</option>
    <option value="25">25</option>
    <option value="50">50</option>
</select>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                Project
            </th>
            <th>
                Team Leader
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="tableBody">
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @{
                        var context = ViewBag.Context as ApplicationDbContext;
                        var project = context.Projects.FirstOrDefault(p => p.Id == item.ProjectId);
                    }
                    @if (project != null)
                    {
                        @project.Name
                    }
                    else
                    {
                        <span>No Project</span>
                    }
                </td>
                <td>
                    @{

                        var teamLeader = context.Users.FirstOrDefault(u => u.Id == item.TeamLeaderId);
                    }
                    @if (teamLeader != null)
                    {
                        <span style="margin-right: 5px;">@teamLeader.FirstName</span>
                        @teamLeader.LastName
                    }
                    else
                    {
                        <span>No Team Leader</span>
                    }
                </td>
                <td>
                    @{
                        bool isEditable = !new[] { "Not in a team" }.Contains(item.Name);
                        string editAction = isEditable ? "Edit" : "#";
                        string deleteAction = isEditable ? "Delete" : "#";
                    }
                    @if(user.RoleId == 1)
                    {
                        <a asp-action="@editAction" asp-route-id="@item.Id" onclick="return confirmDeleteOrEdit('@item.Name')"><i class="fa fa-edit fa-lg"></i></a>  
                        <a asp-action="Details" asp-route-id="@item.Id"><i class="fa fa-info-circle fa-lg"></i></a>  
                        <a asp-action="@deleteAction" asp-route-id="@item.Id" onclick="return confirmDeleteOrEdit('@item.Name')"><i class="fa fa-trash fa-lg" aria-hidden="true"></i></a>
                    }
                    else
                    {
                        <a asp-action="Details" asp-route-id="@item.Id"><i class="fa fa-info-circle fa-lg"></i></a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<button id="prevButton" class="btn btn-secondary"><i class="fa fa-chevron-left icon"></i> Previous</button>
<button id="nextButton" class="btn btn-secondary"><i class="fa fa-chevron-right icon"></i> Next</button>

@section Scripts {
    <script>
        function confirmDeleteOrEdit(teamName) {
            if (teamName === "Not in a team") {
                alert("This team cannot be deleted or edited.");
                return false;
            }
            return true;
        }

        // Define an array to store the indexes of visible rows
        var visibleRowIndexes = [];
        var flag = false;
        // Define displayPageRows function
        function displayPageRows(currentPage, pageSize, totalRows, visibleRowIndexes, flag) {
            var startIndex = (currentPage - 1) * pageSize;
            var endIndex = Math.min(startIndex + pageSize, totalRows);
            if (!flag) {
                $('#tableBody tr').hide(); // Hide all rows
                $('#tableBody tr').slice(startIndex, endIndex).show(); // Show rows for the current page
            }
            else {
                $('#tableBody tr').hide(); // Hide all rows
                for (var i = startIndex; i < endIndex; i++) {
                    $('#tableBody tr:eq(' + visibleRowIndexes[i] + ')').show(); // Show rows starting from startIndex to endIndex
                }
            }
        }

        // Define updateButtonVisibility function
        function updateButtonVisibility(currentPage, pageSize, totalRows) {
            if (currentPage >= Math.ceil(totalRows / pageSize)) {
                $('#nextButton').hide(); // Hide "Next" button if on the last page
            } else {
                $('#nextButton').show();
            }

            if (currentPage == 1) {
                $('#prevButton').hide();
            } else {
                $('#prevButton').show();
            }
        }

        // Apply Filter function
        function applyFilter() {
            var teamNameFilter = $('#teamNameFilter').val().toLowerCase();
            var projectNameFilter = $('#projectNameFilter').val().toLowerCase();

            visibleRowIndexes = []; // Clear the array before filtering

            $('tbody tr').each(function (index) {
                var teamName = $(this).find('td:first').text().toLowerCase();
                var projectName = $(this).find('td:nth-child(2)').text().toLowerCase();

                if (teamName.includes(teamNameFilter) && projectName.includes(projectNameFilter)) {
                    $(this).show();
                    visibleRowIndexes.push(index); // Store index if row is visible
                } else {
                    $(this).hide();
                }
            });

            // Update totalRows based on filtered rows
            var totalRows = $('#tableBody tr:visible').length;

            var currentPage = 1;
            var flag = true;
            var pageSize = parseInt($('#pageSizeSelector').val());
            displayPageRows(currentPage, pageSize, totalRows, visibleRowIndexes, flag);
            updateButtonVisibility(currentPage, pageSize, totalRows);
        }

        // Clear Filter function
        function clearFilter() {
            $('#teamNameFilter').val('');
            $('#projectNameFilter').val('');
            $('#teamTableBody tr').show();


            // Reset totalRows to the original count
            var totalRows = $('#tableBody tr').length;
            var currentPage = 1;
            var pageSize = parseInt($('#pageSizeSelector').val());
            var flag = false;
            visibleRowIndexes = []; // Clear the array before filtering
            displayPageRows(currentPage, pageSize, totalRows, visibleRowIndexes, flag);
            updateButtonVisibility(currentPage, pageSize, totalRows);
        }

        // Document ready function
        $(document).ready(function () {
            var currentPage = 1;
            var pageSize = parseInt($('#pageSizeSelector').val());
            var totalRows = $('#tableBody tr').length; // total rows initially
            var flag = false;
            visibleRowIndexes = []; // Clear the array before filtering
            // Event handler for changing page size
            $('#pageSizeSelector').change(function () {
                pageSize = parseInt($(this).val());
                currentPage = 1;
                displayPageRows(currentPage, pageSize, totalRows, visibleRowIndexes, flag);
                updateButtonVisibility(currentPage, pageSize, totalRows);
            });

            // Event handler for previous button
            $('#prevButton').click(function () {
                if (currentPage > 1) {
                    currentPage--;
                    displayPageRows(currentPage, pageSize, totalRows, visibleRowIndexes, flag);
                    updateButtonVisibility(currentPage, pageSize, totalRows);
                }
            });

            // Event handler for next button
            $('#nextButton').click(function () {
                currentPage++;
                displayPageRows(currentPage, pageSize, totalRows, visibleRowIndexes, flag);
                updateButtonVisibility(currentPage, pageSize, totalRows);
            });

            // Initial display
            displayPageRows(currentPage, pageSize, totalRows, visibleRowIndexes, flag);
            updateButtonVisibility(currentPage, pageSize, totalRows);
        });

    </script>
}