@inject VacationManager.Data.ApplicationDbContext _context
@model VacationManager.Models.TeamModel

@{
    ViewData["Title"] = "Delete";
    var username = User.Identity.Name;
    var user = _context.Users.SingleOrDefault(u => u.Username == username);
    if (user.RoleId != 1)
    {
        <script>
            window.location.href = "/Home/Index";
        </script>
    }
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this team?</h3>
<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        <dt class="col-sm-2">
            Project
        </dt>
        <dd class="col-sm-10">
                @if (!string.IsNullOrEmpty(ViewData["ProjectName"] as string))
                {
                    @ViewData["ProjectName"]
                }
                else
                {
                <span>No Project</span>
                }
        </dd>
        <dt class="col-sm-2">
            Team Leader
        </dt>
        <dd class="col-sm-10">
                @if (!string.IsNullOrEmpty(ViewData["TeamLeaderName"] as string))
                {
                    @ViewData["TeamLeaderName"]
                }
                else
                {
                <span>No Team Leader</span>
                }
        </dd>
    </dl>

    <form asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>
